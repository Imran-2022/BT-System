// <auto-generated />
using System;
using BusTicketReservationSystem.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BusTicketReservationSystem.Infrastructure.Migrations
{
    [DbContext(typeof(BusTicketDbContext))]
    [Migration("20251023174440_UpdateSeedData")]
    partial class UpdateSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BoardingPoint", b =>
                {
                    b.Property<Guid>("PointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("DepartureTimeOffset")
                        .HasColumnType("interval");

                    b.Property<bool>("IsDroppingPoint")
                        .HasColumnType("boolean");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uuid");

                    b.HasKey("PointId");

                    b.HasIndex("RouteId");

                    b.ToTable("BoardingPoints");

                    b.HasData(
                        new
                        {
                            PointId = new Guid("40000000-0000-0000-0000-000000000001"),
                            DepartureTimeOffset = new TimeSpan(0, 0, 0, 0, 0),
                            IsDroppingPoint = false,
                            LocationName = "Dhaka: Kallyanpur",
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            PointId = new Guid("40000000-0000-0000-0000-000000000002"),
                            DepartureTimeOffset = new TimeSpan(0, 0, 30, 0, 0),
                            IsDroppingPoint = false,
                            LocationName = "Dhaka: Gabtali",
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            PointId = new Guid("40000000-0000-0000-0000-000000000003"),
                            DepartureTimeOffset = new TimeSpan(0, 4, 30, 0, 0),
                            IsDroppingPoint = true,
                            LocationName = "Rajshahi: Court",
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            PointId = new Guid("40000000-0000-0000-0000-000000000004"),
                            DepartureTimeOffset = new TimeSpan(0, 5, 0, 0, 0),
                            IsDroppingPoint = true,
                            LocationName = "Rajshahi: Bus Terminal",
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            PointId = new Guid("40000000-0000-0000-0000-000000000005"),
                            DepartureTimeOffset = new TimeSpan(0, 0, 0, 0, 0),
                            IsDroppingPoint = false,
                            LocationName = "Dhaka: Mirpur-1",
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            PointId = new Guid("40000000-0000-0000-0000-000000000006"),
                            DepartureTimeOffset = new TimeSpan(0, 0, 45, 0, 0),
                            IsDroppingPoint = false,
                            LocationName = "Dhaka: Gabtali",
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            PointId = new Guid("40000000-0000-0000-0000-000000000007"),
                            DepartureTimeOffset = new TimeSpan(0, 7, 0, 0, 0),
                            IsDroppingPoint = true,
                            LocationName = "Dinajpur: Kantajew",
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            PointId = new Guid("40000000-0000-0000-0000-000000000008"),
                            DepartureTimeOffset = new TimeSpan(0, 0, 0, 0, 0),
                            IsDroppingPoint = false,
                            LocationName = "Dinajpur: Sadar",
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            PointId = new Guid("40000000-0000-0000-0000-000000000009"),
                            DepartureTimeOffset = new TimeSpan(0, 2, 0, 0, 0),
                            IsDroppingPoint = true,
                            LocationName = "Rangpur: Medical Moor",
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003")
                        });
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Bus", b =>
                {
                    b.Property<Guid>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BusName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("BusSeatLayoutId")
                        .HasColumnType("uuid");

                    b.Property<string>("BusType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BusId");

                    b.HasIndex("BusSeatLayoutId");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            BusId = new Guid("30000000-0000-0000-0000-000000000001"),
                            BusName = "GL AC Bus 01",
                            BusSeatLayoutId = new Guid("a0000000-0000-0000-0000-000000000002"),
                            BusType = "AC",
                            CompanyName = "Green Line"
                        },
                        new
                        {
                            BusId = new Guid("30000000-0000-0000-0000-000000000002"),
                            BusName = "Bus 02 Non-AC",
                            BusSeatLayoutId = new Guid("a0000000-0000-0000-0000-000000000001"),
                            BusType = "Non AC",
                            CompanyName = "National Travels"
                        },
                        new
                        {
                            BusId = new Guid("30000000-0000-0000-0000-000000000003"),
                            BusName = "GL AC Bus 03",
                            BusSeatLayoutId = new Guid("a0000000-0000-0000-0000-000000000002"),
                            BusType = "AC",
                            CompanyName = "Green Line"
                        },
                        new
                        {
                            BusId = new Guid("30000000-0000-0000-0000-000000000004"),
                            BusName = "Bus 04 Non-AC",
                            BusSeatLayoutId = new Guid("a0000000-0000-0000-0000-000000000001"),
                            BusType = "Non AC",
                            CompanyName = "National Travels"
                        },
                        new
                        {
                            BusId = new Guid("30000000-0000-0000-0000-000000000005"),
                            BusName = "GL AC Bus 05",
                            BusSeatLayoutId = new Guid("a0000000-0000-0000-0000-000000000002"),
                            BusType = "AC",
                            CompanyName = "Green Line"
                        },
                        new
                        {
                            BusId = new Guid("30000000-0000-0000-0000-000000000006"),
                            BusName = "Bus 06 Non-AC",
                            BusSeatLayoutId = new Guid("a0000000-0000-0000-0000-000000000001"),
                            BusType = "Non AC",
                            CompanyName = "National Travels"
                        },
                        new
                        {
                            BusId = new Guid("30000000-0000-0000-0000-000000000007"),
                            BusName = "GL AC Bus 07",
                            BusSeatLayoutId = new Guid("a0000000-0000-0000-0000-000000000002"),
                            BusType = "AC",
                            CompanyName = "Green Line"
                        },
                        new
                        {
                            BusId = new Guid("30000000-0000-0000-0000-000000000008"),
                            BusName = "Bus 08 Non-AC",
                            BusSeatLayoutId = new Guid("a0000000-0000-0000-0000-000000000001"),
                            BusType = "Non AC",
                            CompanyName = "National Travels"
                        },
                        new
                        {
                            BusId = new Guid("30000000-0000-0000-0000-000000000009"),
                            BusName = "GL AC Bus 09",
                            BusSeatLayoutId = new Guid("a0000000-0000-0000-0000-000000000002"),
                            BusType = "AC",
                            CompanyName = "Green Line"
                        },
                        new
                        {
                            BusId = new Guid("30000000-0000-0000-0000-000000000010"),
                            BusName = "Bus 10 Non-AC",
                            BusSeatLayoutId = new Guid("a0000000-0000-0000-0000-000000000001"),
                            BusType = "Non AC",
                            CompanyName = "National Travels"
                        });
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BusSchedule", b =>
                {
                    b.Property<Guid>("BusScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BusId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("JourneyDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval");

                    b.HasKey("BusScheduleId");

                    b.HasIndex("BusId");

                    b.HasIndex("RouteId");

                    b.ToTable("BusSchedules");

                    b.HasData(
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000101"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000001"),
                            JourneyDate = new DateTime(2025, 10, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000102"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000002"),
                            JourneyDate = new DateTime(2025, 10, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000103"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000003"),
                            JourneyDate = new DateTime(2025, 10, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000104"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000004"),
                            JourneyDate = new DateTime(2025, 10, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000105"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000005"),
                            JourneyDate = new DateTime(2025, 10, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000106"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000006"),
                            JourneyDate = new DateTime(2025, 10, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000107"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000007"),
                            JourneyDate = new DateTime(2025, 10, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000108"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000008"),
                            JourneyDate = new DateTime(2025, 10, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000109"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000009"),
                            JourneyDate = new DateTime(2025, 10, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000110"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000010"),
                            JourneyDate = new DateTime(2025, 10, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000111"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000001"),
                            JourneyDate = new DateTime(2025, 10, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000112"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000002"),
                            JourneyDate = new DateTime(2025, 10, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000113"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000003"),
                            JourneyDate = new DateTime(2025, 10, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000114"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000004"),
                            JourneyDate = new DateTime(2025, 10, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000115"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000005"),
                            JourneyDate = new DateTime(2025, 10, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000116"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000006"),
                            JourneyDate = new DateTime(2025, 10, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000117"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000007"),
                            JourneyDate = new DateTime(2025, 10, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000118"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000008"),
                            JourneyDate = new DateTime(2025, 10, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000119"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000009"),
                            JourneyDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000120"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000010"),
                            JourneyDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000121"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000001"),
                            JourneyDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000122"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000002"),
                            JourneyDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000123"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000003"),
                            JourneyDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000124"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000004"),
                            JourneyDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000125"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000005"),
                            JourneyDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000126"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000006"),
                            JourneyDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000127"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000007"),
                            JourneyDate = new DateTime(2025, 10, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000128"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000008"),
                            JourneyDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000129"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000009"),
                            JourneyDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000130"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000010"),
                            JourneyDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000131"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000001"),
                            JourneyDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000132"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000002"),
                            JourneyDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000133"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000003"),
                            JourneyDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000134"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000004"),
                            JourneyDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000135"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000005"),
                            JourneyDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000136"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000006"),
                            JourneyDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000137"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000007"),
                            JourneyDate = new DateTime(2025, 11, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000138"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000008"),
                            JourneyDate = new DateTime(2025, 11, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000139"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000009"),
                            JourneyDate = new DateTime(2025, 11, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000140"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000010"),
                            JourneyDate = new DateTime(2025, 11, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000141"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000001"),
                            JourneyDate = new DateTime(2025, 11, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000142"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000002"),
                            JourneyDate = new DateTime(2025, 11, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000143"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000003"),
                            JourneyDate = new DateTime(2025, 11, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000144"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000004"),
                            JourneyDate = new DateTime(2025, 11, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            BusScheduleId = new Guid("30000000-0000-0000-0000-000000000145"),
                            BusId = new Guid("30000000-0000-0000-0000-000000000005"),
                            JourneyDate = new DateTime(2025, 11, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BusSeatLayout", b =>
                {
                    b.Property<Guid>("BusSeatLayoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("LayoutName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SeatConfiguration")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SeatsPerRowCount")
                        .HasColumnType("integer");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("integer");

                    b.HasKey("BusSeatLayoutId");

                    b.ToTable("BusSeatLayouts");

                    b.HasData(
                        new
                        {
                            BusSeatLayoutId = new Guid("a0000000-0000-0000-0000-000000000001"),
                            LayoutName = "2x2 Standard",
                            SeatConfiguration = "A1,A2,A3,A4;B1,B2,B3,B4;C1,C2,C3,C4;D1,D2,D3,D4;E1,E2,E3,E4;F1,F2,F3,F4;G1,G2,G3,G4;H1,H2,H3,H4",
                            SeatsPerRowCount = 4,
                            TotalSeats = 32
                        },
                        new
                        {
                            BusSeatLayoutId = new Guid("a0000000-0000-0000-0000-000000000002"),
                            LayoutName = "2x1 AC Business",
                            SeatConfiguration = "A1,A2,A3;B1,B2,B3;C1,C2,C3;D1,D2,D3;E1,E2,E3;F1,F2,F3;G1,G2,G3;H1,H2,H3",
                            SeatsPerRowCount = 3,
                            TotalSeats = 24
                        });
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Route", b =>
                {
                    b.Property<Guid>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RouteId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            RouteId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Destination = "Rajshahi",
                            Origin = "Dhaka"
                        },
                        new
                        {
                            RouteId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Destination = "Dinajpur",
                            Origin = "Dhaka"
                        },
                        new
                        {
                            RouteId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Destination = "Rangpur",
                            Origin = "Dinajpur"
                        });
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.SeatStatus", b =>
                {
                    b.Property<Guid>("SeatStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BusScheduleId")
                        .HasColumnType("uuid");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("text");

                    b.Property<string>("PassengerName")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid?>("TicketId")
                        .HasColumnType("uuid");

                    b.HasKey("SeatStatusId");

                    b.HasIndex("BusScheduleId");

                    b.HasIndex("TicketId");

                    b.ToTable("SeatStatuses");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Ticket", b =>
                {
                    b.Property<Guid>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BoardingPoint")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("BusScheduleId")
                        .HasColumnType("uuid");

                    b.Property<string>("DroppingPoint")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("TicketId");

                    b.HasIndex("BusScheduleId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BoardingPoint", b =>
                {
                    b.HasOne("BusTicketReservationSystem.Domain.Entities.Route", "Route")
                        .WithMany("BoardingPoints")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Bus", b =>
                {
                    b.HasOne("BusTicketReservationSystem.Domain.Entities.BusSeatLayout", "Layout")
                        .WithMany("Buses")
                        .HasForeignKey("BusSeatLayoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Layout");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BusSchedule", b =>
                {
                    b.HasOne("BusTicketReservationSystem.Domain.Entities.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketReservationSystem.Domain.Entities.Route", "Route")
                        .WithMany("BusSchedules")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.SeatStatus", b =>
                {
                    b.HasOne("BusTicketReservationSystem.Domain.Entities.BusSchedule", "BusSchedule")
                        .WithMany("SeatStatuses")
                        .HasForeignKey("BusScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketReservationSystem.Domain.Entities.Ticket", null)
                        .WithMany("BookedSeats")
                        .HasForeignKey("TicketId");

                    b.Navigation("BusSchedule");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Ticket", b =>
                {
                    b.HasOne("BusTicketReservationSystem.Domain.Entities.BusSchedule", "BusSchedule")
                        .WithMany("Tickets")
                        .HasForeignKey("BusScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusSchedule");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BusSchedule", b =>
                {
                    b.Navigation("SeatStatuses");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.BusSeatLayout", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Route", b =>
                {
                    b.Navigation("BoardingPoints");

                    b.Navigation("BusSchedules");
                });

            modelBuilder.Entity("BusTicketReservationSystem.Domain.Entities.Ticket", b =>
                {
                    b.Navigation("BookedSeats");
                });
#pragma warning restore 612, 618
        }
    }
}
